/* ------------------------------------------------------------------------ *\
   mixins.typography
\* ------------------------------------------------------------------------ */


/**
 * [font description]
 * @param  {[type]} family [description]
 * @param  {[type]} size   [description]
 * @param  {[type]} style  =             normal [description]
 * @param  {[type]} weight =             normal [description]
 * @return {[type]}        [description]
 */
t-global--font(family, size, style = normal, weight = normal)
  font-family: family, nix.text.family.default
  font-style: style
  font-weight: weight
  font-size: size


/**
 * [face description]
 * @param  {[type]} name   [description]
 * @param  {[type]} path   [description]
 * @param  {[type]} weight =             "normal" [description]
 * @param  {[type]} style  =             "normal" [description]
 * @return {[type]}        [description]
 */
t-global--face(name, path, weight = "normal", style = "normal")
  url-fallback = "url('" + path + ".eot')"
  url = "url('" + path + ".eot?#iefix') format('embedded-opentype'), "
  url = url + "url('" + path + ".woff') format('woff'), "
  url = url + "url('" + path + ".ttf') format('truetype'), "
  url = url + "url('" + path + ".svg#svg" + name + "') format('svg')"

  @font-face
    src: unquote(url-fallback)
    src: unquote(url)
    font-family: name
    font-style: unquote(style)
    font-weight: unquote(weight)


/**
 * [family description]
 * @param  {[type]} family [description]
 * @return {[type]}        [description]
 */
t-global--family(family)
  font-family: family, nix.text.family.default


/**
 * [size description]
 * @param  {[type]} size [description]
 * @return {[type]}      [description]
 */
t-global--size(size)
  font-size: size


/**
 * [typography description]
 * @param  {[type]} type [description]
 * @return {[type]}      [description]
 */
t-global(type)
  t-global--smoothing(type.smoothing)
  font-size: type.size
  font-weight: type.weight
  font-family: type.family
  line-height: type.line-height
  -ms-text-size-adjust: 100%
  -webkit-text-size-adjust: 100%
  -webkit-tap-highlight-color: rgba(128, 203, 196, .1)



/**
 * [smoothing description]
 * @param  {[type]} value =             true [description]
 * @return {[type]}       [description]
 */
t-global--smoothing(value = true)
  if value
    -webkit-font-smoothing: antialiased
    -moz-osx-font-smoothing: grayscale
  else
    -webkit-font-smoothing: subpixel-antialiased
    -moz-osx-font-smoothing: auto


/**
 * [create description]
 * @param  {[type]} selector [description]
 * @return {[type]}          [description]
 */
t-global--create(selector)
  html
    if(!nix.text.responsive)
      t-global(nix.typography)

  h1, h2, h3, h4, h5, h6, p, .heading, .text
    margin: 0 0 .67rem 0
    font-weight: 200
    font-family: nix.typography.family
    line-height: 1.75

  h1
    font-size: nix.text.sizes["lg"]

  h2
    font-size: nix.text.sizes["md"]

  h3
    font-size: nix.text.sizes["sm"]

  h4
    font-size: nix.text.sizes["xs"]

  h5
    font-size: nix.text.sizes["xxs"]

  h6
    font-size: nix.text.sizes["xxxs"]

  p
    font-size: nix.text.sizes["xs"]
    letter-spacing: .3px

    &:last-child, &[nix.prefix.root + nix.prefix.util + "-grid"~="__cell"]
      margin-bottom: 0

  code, kbd, pre, samp
    font-family: monospace, monospace
    font-size: 1em

  b, optgroup, strong, legend, th, dt
    font-weight: 500

  e-text--create(nix.prefix.root + nix.prefix.util + "text")
